# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: chickenmasala
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: law-copilot
# "service" is the name of this project. This will also be added to your AWS resource names.
service: api

package:
  excludeDevDependencies: true

plugins:
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-plugin-common-excludes

custom:
  stageVariables:
    stg:
      NODE_ENV: staging
    prod:
      NODE_ENV: production
  wsgi:
    app: app.app
  tableName: sessions-table-${self:custom.stageVariables.${self:provider.stage}.NODE_ENV}

resources:
  Resources:
    SessionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

provider:
  name: aws
  stage: ${opt:stage}
  runtime: python3.12
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [SessionsTable, Arn]
  environment:
    NODE_ENV: ${self:custom.stageVariables.${self:provider.stage}.NODE_ENV}
    SESSIONS_TABLE: ${self:custom.tableName}
    MISTRAL_API_KEY: ${ssm:/law-copilot/api/mistral-api-key}
    MODEL_NAME: open-mixtral-8x22b

functions:
  api:
    handler: wsgi_handler.handler
    timeout: 30
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY
